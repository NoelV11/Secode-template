secode version x.x.x, (C) 2021
Number of rules (primarily dangerous function names) in C/C++ ruleset: 223
Examining Vulnerable_8.c

FINAL RESULTS:

Vulnerable_8.c:8:  [4] (buffer) scanf:
  The scanf() family's %s operation, without a limit specification, permits
  buffer overflows (CWE-120, CWE-20). Specify a limit to %s, or use a
  different input function.
Vulnerable_8.c:27:  [4] (buffer) scanf:
  The scanf() family's %s operation, without a limit specification, permits
  buffer overflows (CWE-120, CWE-20). Specify a limit to %s, or use a
  different input function. If the scanf format is influenceable by an
  attacker, it's exploitable.
Vulnerable_8.c:5:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
Vulnerable_8.c:9:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
Vulnerable_8.c:21:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
Vulnerable_8.c:25:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
Vulnerable_8.c:26:  [2] (buffer) sprintf:
  Does not check for buffer overflows (CWE-120). Use sprintf_s, snprintf, or
  vsnprintf. Risk is low because the source has a constant maximum length.
Vulnerable_8.c:29:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.


=========================================================================
                          Your Code Report           
=========================================================================
ANALYSIS SUMMARY:

Hits = 8
Lines analyzed = 33 in approximately 0.00 seconds (7043 lines/second)
Physical Source Lines of Code (SLOC) = 25
Hits@level = [0]   4 [1]   0 [2]   6 [3]   0 [4]   2 [5]   0
Hits@level+ = [0+]  12 [1+]   8 [2+]   8 [3+]   2 [4+]   2 [5+]   0
Hits/KSLOC@level+ = [0+] 480 [1+] 320 [2+] 320 [3+]  80 [4+]  80 [5+]   0
Minimum risk level = 1
Not every hit is necessarily a security vulnerability.
There may be other security vulnerabilities; review your code!
=======================================================================
                       End of Code Analysis                 
=======================================================================
